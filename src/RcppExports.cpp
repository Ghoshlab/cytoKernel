// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// tracecpp
double tracecpp(const NumericMatrix& x);
RcppExport SEXP _cytoKernel_tracecpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(tracecpp(x));
    return rcpp_result_gen;
END_RCPP
}
// inverseLogitcpp
long double inverseLogitcpp(long double x);
RcppExport SEXP _cytoKernel_inverseLogitcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< long double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(inverseLogitcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// distKernelcpp
long double distKernelcpp(long double x1, long double x2, long double rho);
RcppExport SEXP _cytoKernel_distKernelcpp(SEXP x1SEXP, SEXP x2SEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< long double >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< long double >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< long double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(distKernelcpp(x1, x2, rho));
    return rcpp_result_gen;
END_RCPP
}
// DEfeatures
int DEfeatures(NumericVector p, long double a);
RcppExport SEXP _cytoKernel_DEfeatures(SEXP pSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< long double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(DEfeatures(p, a));
    return rcpp_result_gen;
END_RCPP
}
// rowMaxcpp
NumericVector rowMaxcpp(const NumericMatrix& x);
RcppExport SEXP _cytoKernel_rowMaxcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rowMaxcpp(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cytoKernel_tracecpp", (DL_FUNC) &_cytoKernel_tracecpp, 1},
    {"_cytoKernel_inverseLogitcpp", (DL_FUNC) &_cytoKernel_inverseLogitcpp, 1},
    {"_cytoKernel_distKernelcpp", (DL_FUNC) &_cytoKernel_distKernelcpp, 3},
    {"_cytoKernel_DEfeatures", (DL_FUNC) &_cytoKernel_DEfeatures, 2},
    {"_cytoKernel_rowMaxcpp", (DL_FUNC) &_cytoKernel_rowMaxcpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_cytoKernel(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
